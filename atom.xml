<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HsLotus的知识wiki</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-05T09:20:37.594Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>HsLotus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将hexo博客部署到服务器</title>
    <link href="http://example.com/wiki/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/wiki/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-04-01T01:47:27.000Z</published>
    <updated>2021-04-05T09:20:37.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>服务器：阿里云轻量级服务器、centos7.3、1核、2G内存</li><li>hexo博客：Next主题，已经完成本地调试<span id="more"></span><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="本地计算机"><a href="#本地计算机" class="headerlink" title="本地计算机"></a>本地计算机</h3>本地先生成 ssh 密钥，打开cmd<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>一路回车即可。<br>之后进入 C:\Users\用户名.ssh 文件夹（是隐藏文件，再文件查看中勾选隐藏文件），用记事本打开 id_rsa.pub 文件，复制并备用。</li></ol><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>初学者建议安装宝塔面版进行操作</p><ol><li>更新系统<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure></li><li>安装Node.js<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nodejs</span><br></pre></td></tr></table></figure></li><li>安装Git<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></li><li>检查安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li><li>安装Nginx<br>Nginx安装可以通过宝塔安装，或者自行百度。 </li><li>创建新的git用户并给其权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ adduser git#创建一个用户git</span><br><span class="line">$ sudo passwd git#设置git用户密码</span><br><span class="line"></span><br><span class="line">输入密码，密码太简单会给警告。</span><br><span class="line"></span><br><span class="line">$ chmod 740 &#x2F;etc&#x2F;sudoers#修改文件权限为用户可读写执行</span><br><span class="line">$ vim &#x2F;etc&#x2F;sudoers#编辑文件</span><br><span class="line"></span><br><span class="line">按 i 键进入编辑模式</span><br><span class="line">找到这里 “root  ALL&#x3D;(ALL)   ALL”</span><br><span class="line">在下面输入 “git   ALL&#x3D;(ALL)   ALL”</span><br><span class="line">按esc进入视图模式，再输入 :wq 保存退出</span><br><span class="line"></span><br><span class="line">$ chmod 400 &#x2F;etc&#x2F;sudoers  &#x2F;&#x2F;改回权限</span><br></pre></td></tr></table></figure></li><li>创建密钥文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ su git</span><br><span class="line">$ mkdir ~&#x2F;.ssh</span><br><span class="line">$ vim ~&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line"></span><br><span class="line"># 把之前复制的 id_rsa.pub 文件粘贴到这</span><br><span class="line"></span><br><span class="line">$ chmod 600 &#x2F;home&#x2F;git&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">$ chmod 700 &#x2F;home&#x2F;git&#x2F;.ssh</span><br></pre></td></tr></table></figure></li><li>测试 ssh 连接<br>本地打开cmd窗口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@服务器ip</span><br></pre></td></tr></table></figure>输入密码后显示类似 Welcome to Alibaba Cloud Elastic Compute Service ! （我是阿里云服务器）的语句就说明你链接成功了。</li><li>创建网站的根目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">mkdir &#x2F;home&#x2F;hexo    # 此目录为网站的根目录</span><br><span class="line">chown git:git -R &#x2F;home&#x2F;hexo</span><br></pre></td></tr></table></figure></li><li>配置 Nginx<br>我是直接使用了宝塔创建站点，比较方便<br>如果要自己手动配置<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure>配置文件样例:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; # 监听的端口，默认是80</span><br><span class="line">    server_name _; # 你的域名，没有的话可以随便填，然后用端口访问;</span><br><span class="line">    index index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line">    root &#x2F;home&#x2F;hexo; # 网站根目录</span><br><span class="line"></span><br><span class="line">    # 下面的无所谓，可以只写一个location &#x2F; &#123;&#125;</span><br><span class="line">    location ~ ^&#x2F;(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)</span><br><span class="line">    &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">        error_log &#x2F;dev&#x2F;null;</span><br><span class="line">        access_log &#x2F;dev&#x2F;null;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    location ~ .*\.(js|css)?$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">        error_log &#x2F;dev&#x2F;null;</span><br><span class="line">        access_log &#x2F;dev&#x2F;null; </span><br><span class="line">    &#125;</span><br><span class="line">    access_log  &#x2F;www&#x2F;wwwlogs&#x2F;47.105.106.249.log;</span><br><span class="line">    error_log  &#x2F;www&#x2F;wwwlogs&#x2F;47.105.106.249.error.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>建立 git 裸库<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">cd &#x2F;home&#x2F;git   # 在 git 用户目录下创建</span><br><span class="line">git init --bare hexo.git</span><br><span class="line">chown git:git -R hexo.git</span><br></pre></td></tr></table></figure></li><li>使用 git-hooks 同步网站根目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim hexo.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure>填入以下内容，如果根目录和仓库目录和我设的不一样就自己改一下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">git --work-tree&#x3D;&#x2F;home&#x2F;hexo --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;hexo.git checkout -f</span><br></pre></td></tr></table></figure>完成后赋予权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R git:git &#x2F;home&#x2F;git&#x2F;hexo.git&#x2F;hooks&#x2F;post-receive</span><br><span class="line">$ chmod +x &#x2F;home&#x2F;git&#x2F;hexo.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure></li><li>配置本地 Hexo 站点文件并部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@SERVER:&#x2F;home&#x2F;git&#x2F;hexo.git     # 填写你的服务器地址 将SERVER替换掉</span><br><span class="line">    branch: master      # 分支</span><br></pre></td></tr></table></figure>之后 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d。<br>打开刚刚设置的站点，部署成功。</li></ol><h2 id="各种问题"><a href="#各种问题" class="headerlink" title="各种问题"></a>各种问题</h2><ol><li>[emerg] getpwnam(“www”) failed</li></ol><ul><li>信息：Nginx的错误日志中给出如下信息：[emerg] 65814#0: getpwnam(“www”) failed</li><li>原因：没有创建www这个用户</li><li>解决：创建组和用户<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;groupadd -f www</span><br><span class="line">&#x2F;usr&#x2F;sbin&#x2F;useradd -g www www</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>existing lock file /etc/subgid.lock without a PID</li></ol><ul><li>信息：useradd git -g git 后显示 useradd: existing lock file /etc/subgid.lock without a PID（也会有类似的文件）</li><li>原因：这个文件</li><li>解决：删除即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf &#x2F;etc&#x2F;subgid.lock </span><br><span class="line">useradd git -g git</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>Host key verification failed.</li></ol><ul><li>信息：ssh -v git@服务器ip 后显示  WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!</li><li>原因：重置过服务器</li><li>解决：ssh-keygen -R IP地址</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://blog.csdn.net/weixin_41154636/article/details/99685965">hexo部署云服务器的全过程</a></li><li><a href="https://blog.csdn.net/u012383839/article/details/72875210">Nginx错误：[emerg] getpwnam(“www”) failed</a></li><li><a href="https://blog.csdn.net/weixin_34362790/article/details/93690469">linux下增加useradd提示existing lock file /etc/subgid.lock without a PID</a></li><li><a href="https://blog.csdn.net/wd2014610/article/details/85639741">解决Host key verification failed.(亲测有效)</a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;服务器：阿里云轻量级服务器、centos7.3、1核、2G内存&lt;/li&gt;
&lt;li&gt;hexo博客：Next主题，已经完成本地调试</summary>
    
    
    
    <category term="服务器" scheme="http://example.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>centOS7服务器防火墙</title>
    <link href="http://example.com/wiki/centOS7%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://example.com/wiki/centOS7%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%98%B2%E7%81%AB%E5%A2%99/</id>
    <published>2021-03-30T12:48:59.000Z</published>
    <updated>2021-03-30T12:52:17.149Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>查看防火墙状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>running 状态即防火墙已经开启<br>dead 状态即防火墙未开启</p><span id="more"></span></li><li><p>开启防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure></li><li><p>查看端口是否已开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port&#x3D;8888&#x2F;tcp</span><br></pre></td></tr></table></figure><p>提示yes表示已开通，提示no表示未开通。</p></li><li><p>开放端口号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port&#x3D;8888&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure><p>提示success表示成功。</p></li><li><p>开放一个范围的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port&#x3D;8000-9999&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure></li><li><p>重新载入配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>关闭端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --remove-port&#x3D;8888&#x2F;tcp</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看防火墙状态&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl status firewalld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;running 状态即防火墙已经开启&lt;br&gt;dead 状态即防火墙未开启&lt;/p&gt;</summary>
    
    
    
    <category term="服务器" scheme="http://example.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="防火墙" scheme="http://example.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>jetbrain学生认证</title>
    <link href="http://example.com/wiki/jetbrain%E5%AD%A6%E7%94%9F%E8%AE%A4%E8%AF%81/"/>
    <id>http://example.com/wiki/jetbrain%E5%AD%A6%E7%94%9F%E8%AE%A4%E8%AF%81/</id>
    <published>2021-03-29T08:47:26.000Z</published>
    <updated>2021-03-30T12:53:05.077Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/l</summary>
      
    
    
    
    <category term="杂项" scheme="http://example.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>考研流程</title>
    <link href="http://example.com/wiki/%E8%80%83%E7%A0%94%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/wiki/%E8%80%83%E7%A0%94%E6%B5%81%E7%A8%8B/</id>
    <published>2021-03-29T07:19:25.000Z</published>
    <updated>2021-03-29T08:34:16.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总流程图"><a href="#总流程图" class="headerlink" title="总流程图"></a>总流程图</h2><div id="flowchart-0" class="flow-chart"></div><h2 id="初试"><a href="#初试" class="headerlink" title="初试"></a>初试</h2><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p>12月最后一个周末。</p><p>周六 </p><ul><li>8:30 - 11:30 政治 </li><li>14:00 - 17:00 外语</li></ul><p>周日</p><ul><li>8:30 - 11:30 业务课1 </li><li>14:00 - 17:00 业务课2</li></ul><p>ps.考研不能提前离开考场</p><h3 id="科目"><a href="#科目" class="headerlink" title="科目"></a>科目</h3><ol><li>政治<br>满分100分，考研最简单的科目，因为考的很杂，而且有时事政治的内容，所有强烈建议报班跟着老师复习。<br>单选题 16*1’、多选题 17*2’、论述题 5*10’</li></ol><ol start="2"><li><p>外语</p></li><li><p>业务课1<br>以我们计算机专业为例，业务课1就是考数学。<br>数学分为数学一和数学二，其中数学一考高数、线代和概率论，数学二考高数、线代，并且数学一比数学二难一点。</p></li><li><p>业务课2</p></li></ol><p>##<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 决定考研e1=>end: 上岸e2=>end: 再战、就业...c1=>condition: 初试(十二月最后一个周末)c2=>condition: 调剂复试(四月份)c3=>condition: 复试(四月份)c4=>condition: 通过国家线op1=>operation: 网上预报名(十月份)op2=>operation: 正式报名和现场确认(十一月)op3=>operation: 联系调剂院校op4=>operation: 拟录取(六月份)op5=>operation: ...st->op1->op2->c1(yes)->c3(yes)->op5->op4->e1c1(no)->c4(no)->e2c4(yes)->op3->c2(yes)->op4c2(no)->e2c3(no)->op3</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;总流程图&quot;&gt;&lt;a href=&quot;#总流程图&quot; class=&quot;headerlink&quot; title=&quot;总流程图&quot;&gt;&lt;/a&gt;总流程图&lt;/h2&gt;&lt;div id=&quot;flowchart-0&quot; class=&quot;flow-chart&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;初试&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="考研" scheme="http://example.com/categories/%E8%80%83%E7%A0%94/"/>
    
    
  </entry>
  
  <entry>
    <title>spfa</title>
    <link href="http://example.com/wiki/spfa/"/>
    <id>http://example.com/wiki/spfa/</id>
    <published>2021-03-29T06:48:50.000Z</published>
    <updated>2021-03-29T08:38:28.453Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h2><span id="more"></span><h2 id="算法说明"><a href="#算法说明" class="headerlink" title="算法说明"></a>算法说明</h2><h3 id="无优化"><a href="#无优化" class="headerlink" title="无优化"></a>无优化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    vis[s] = <span class="number">1</span>;dis[s] = <span class="number">0</span>;</span><br><span class="line">    queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(s);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w) &#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v]) &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span> (++tim[v] &gt; n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SLF优化-双端队列优化"><a href="#SLF优化-双端队列优化" class="headerlink" title="SLF优化(双端队列优化)"></a>SLF优化(双端队列优化)</h3><p>SLF:Small Label First<br>就是如果要加入队列的值比队列头要小， 就把他放在队列头。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    vis[st] = <span class="number">1</span>; dis[st] = <span class="number">0</span>;</span><br><span class="line">    deque&lt;<span class="keyword">int</span>&gt;q; q.<span class="built_in">push_front</span>(st);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.<span class="built_in">front</span>(); q.<span class="built_in">pop_front</span>();</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                    vis[v] = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">// 优化</span></span><br><span class="line">                    <span class="keyword">if</span> (dis[v] &lt;= q.<span class="built_in">front</span>()) q.<span class="built_in">push_front</span>(dis[v]);</span><br><span class="line">                    <span class="keyword">else</span> q.<span class="built_in">push_back</span>(dis[v]);</span><br><span class="line">                    <span class="keyword">if</span> (++tim[v] &gt; n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LLL优化"><a href="#LLL优化" class="headerlink" title="LLL优化"></a>LLL优化</h3><p>LLL: Large label last<br>和队列中的平均值比， 比平均值大就不更新放在队列后面</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    vis[st] = <span class="number">1</span>; dis[st] = <span class="number">0</span>;</span><br><span class="line">    queue&lt;<span class="keyword">int</span>&gt;q; q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, cnt_s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (u * cnt_s &gt; sum)&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(u);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        sum -= dis[u], cnt_s--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">                    sum += dis[v], cnt_s++;</span><br><span class="line">                    <span class="keyword">if</span> (++tim[v] &gt; n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SLF-LLL（Large-Label-Last）"><a href="#SLF-LLL（Large-Label-Last）" class="headerlink" title="SLF + LLL（Large Label Last）"></a>SLF + LLL（Large Label Last）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">deque&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    q.<span class="built_in">push_back</span>(u);</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = dis[u];</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        u = q.<span class="built_in">front</span>();</span><br><span class="line">        <span class="keyword">while</span>(num * dis[u] &gt; sum)&#123;</span><br><span class="line">            q.<span class="built_in">pop_front</span>();q.<span class="built_in">push_back</span>(u);</span><br><span class="line">            u = q.<span class="built_in">front</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        q.<span class="built_in">pop_front</span>();</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        tim[u]++;</span><br><span class="line">        <span class="keyword">if</span> (tim[u] &gt; <span class="built_in">sqrt</span>(n + m)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span> (!q.<span class="built_in">empty</span>() &amp;&amp; dis[v] &gt; dis[q.<span class="built_in">front</span>()]) q.<span class="built_in">push_back</span>(v);</span><br><span class="line">                <span class="keyword">else</span> q.<span class="built_in">push_front</span>(v);</span><br><span class="line">                vis[v] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="非连通块找负环"><a href="#非连通块找负环" class="headerlink" title="非连通块找负环"></a>非连通块找负环</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ss=n+<span class="number">1</span>;<span class="comment">//找一个超级边，与其他边的距离为1，寻找一遍spfa(ss)找有没有非连通块的负权</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="built_in">addedge</span>(ss,i,<span class="number">0</span>);<span class="comment">// 注意 要是有向图 就得是这个顺序才行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">spfa</span>(ss))&#123;</span><br><span class="line">    ……</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init</span>();<span class="comment">//注意在初始化一遍</span></span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;算法介绍&quot;&gt;&lt;a href=&quot;#算法介绍&quot; class=&quot;headerlink&quot; title=&quot;算法介绍&quot;&gt;&lt;/a&gt;算法介绍&lt;/h2&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="图论" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="最短路" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Dijkstra</title>
    <link href="http://example.com/wiki/Dijkstra/"/>
    <id>http://example.com/wiki/Dijkstra/</id>
    <published>2021-03-29T05:49:16.000Z</published>
    <updated>2021-03-29T08:38:32.718Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h2><span id="more"></span><h2 id="算法说明"><a href="#算法说明" class="headerlink" title="算法说明"></a>算法说明</h2><h3 id="普通-n-2-版"><a href="#普通-n-2-版" class="headerlink" title="普通$n^2$版"></a>普通$n^2$版</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    vis[s] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = <span class="built_in">min</span>(dis[i], ma[s][i]);<span class="comment">//先给点1初始化距离</span></span><br><span class="line">    <span class="keyword">int</span> index;   <span class="comment">//记录最短距离的下标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++) &#123; <span class="comment">//找剩下的n-1 个点</span></span><br><span class="line">        <span class="keyword">int</span> minn = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!vis[j] &amp;&amp; minn &gt; dis[j]) &#123;</span><br><span class="line">                minn = dis[j];</span><br><span class="line">                index = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            dis[j] = <span class="built_in">min</span>(dis[j], ma[index][j] + minn);<span class="comment">// 再根据minn更新dis</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优先队列优化"><a href="#优先队列优化" class="headerlink" title="优先队列优化"></a>优先队列优化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;P, vector&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">P</span>(<span class="number">0</span>, s));</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.<span class="built_in">top</span>().second; q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)</span><br><span class="line">                dis[v] = dis[u] + w, q.<span class="built_in">push</span>(<span class="built_in">P</span>(dis[v], v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;算法介绍&quot;&gt;&lt;a href=&quot;#算法介绍&quot; class=&quot;headerlink&quot; title=&quot;算法介绍&quot;&gt;&lt;/a&gt;算法介绍&lt;/h2&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="图论" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="最短路" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
  </entry>
  
</feed>
